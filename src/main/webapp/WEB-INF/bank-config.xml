<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<context:component-scan base-package="com.ravi.bank.web" />
	<mvc:annotation-driven>
	</mvc:annotation-driven>
	
	<!-- This allow the Spring dispatcher servlet to find static content - css/js/images etc.  -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver"/>

	<bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/views/**/views.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- Pulls in some messages in a resource file called messages.properties.  Use with <fmt:message/> tag -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages"/>
    </bean>

<!-- 	<bean id="handlerMapping"
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="contentNegotiationManager" ref="contentNegotiationManager" />
		<property name="useRegisteredSuffixPatternMatch" value="false" />
		<property name="alwaysUseFullPath" value="true"></property>
		
	</bean>

	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="false" />
		<property name="favorParameter" value="true" />
		<property name="mediaTypes">
			<value>
				json=application/json
				xml=application/xml
			</value>
		</property>
	</bean>
 -->
 
 
	<!-- The following tags are shorcuts for defining a ParameterizableViewController 
		that immediately forwards to a view when invoked. They are used in static cases 
		when there is no Java Controller logic to execute before the view generates 
		the response. -->
<!-- 	<mvc:view-controller path="/index" view-name="index" />
	<mvc:view-controller path="/about" view-name="about" />
 -->	

</beans>
