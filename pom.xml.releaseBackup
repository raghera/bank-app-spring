<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.ravi.spring</groupId>
	<artifactId>bank-app-spring</artifactId>
	<packaging>war</packaging>
	<version>0.1-SNAPSHOT</version>
	<name>bank-app-spring Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<scm>
	    <connection>scm:svn:http://localhost/bank-app-spring/trunk</connection>
   		<developerConnection>scm:svn:https://localhost/bank-app-spring/trunk</developerConnection>
   		<url>http://localhost/view.cvs</url>
	</scm>
	<properties>
		<final.war.path>bank-app-spring.war</final.war.path>
		<junit.version>4.11</junit.version>
		<project.javaee.version>7.0</project.javaee.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<ch.qos.logback-version>1.0.13</ch.qos.logback-version>
		<project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>
		<java-version>1.7</java-version>
		<spring.framework.version>3.2.12.RELEASE</spring.framework.version>
		<spring.security.version>3.2.5.RELEASE</spring.security.version>
		<!-- <org.aspectj-version>1.7.4</org.aspectj-version> -->
		<org.slf4j-version>1.7.5</org.slf4j-version>
	</properties>
	<!-- Repsitories -->
	<repositories>
		<repository>
			<id>java.net2</id>
			<name>Repository hosting the jee6 artifacts</name>
			<url>http://download.java.net/maven/2</url>
		</repository>
	</repositories>
	<!-- Bill of Materials will give all the versions for the Spring project 
		that are compatible -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<!-- <version>4.0.1.RELEASE</version> -->
				<version>${spring.framework.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- Oracle driver -->
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>11.2.0</version>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<scope>provided</scope>
			<version>${project.javaee.version}</version>
		</dependency>
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<!-- Replaces commons logging (JCL) from Spring and provides a bridge to slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<!-- Using this instead of log4j -->
		<dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${ch.qos.logback-version}</version>
        </dependency>
        <!-- If you want to use log4j - but make you'll have to add the configuration xml too for it to work -->
		<!-- <dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.7</version>
		</dependency>
         -->
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<!-- will come with all needed Spring dependencies such as spring-core 
				and spring-beans for orm support -->
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<!-- Persistence -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>3.5.4-Final</version>
			<!-- will come with Hibernate core -->
		</dependency>
		<!-- Web Dependencies -->
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-servlet</artifactId>
			<version>3.0.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
			<version>3.0.5</version>
		</dependency>
		<!-- If you need everything from Tiles 
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-extras</artifactId>
			<version>3.0.5</version>
		</dependency> -->
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<!-- @Inject -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>
        <!-- Aspects -->
        <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<!-- Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
	    <dependency>
	        <groupId>org.springframework.security</groupId>
	        <artifactId>spring-security-web</artifactId>
	        <version>${spring.security.version}</version>
	    </dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<!-- javax.validation (JSR-303) -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.0.0.GA</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>4.3.0.Final</version>
        </dependency>
        <!-- Utilities -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>14.0.1</version>
        </dependency>
        <!--Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Dev test server -->
	    <dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>8.1.2.v20120308</version>
		</dependency>
        
	</dependencies>

	<build>
		<finalName>bank-app-spring</finalName>

		<plugins>
			<!-- cool plugin - can run&deploy to jetty from maven in one go e.g. mvn clean package jetty:run -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.2.v20120308</version>
				<configuration>
 				<webApp>
					    <contextPath>/bank</contextPath>
				</webApp>
				</configuration>
			</plugin>
			<!-- jboss is a bit more fiddly with the below use mvn jboss:hard-deploy then mvn jboss-start also need to give it lots of config and remember to stop it jboss-stop-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jboss-maven-plugin</artifactId>
				<version>1.5.0</version>
				<configuration>
					<jbossHome>/OSS/jboss-5.0.1.GA</jbossHome>
					<serverName>default</serverName>
					<fileName>${final.war.path}</fileName>
					<hostName>localhost</hostName>
					<port>8080</port>
					<fileNames>
						<fileName>${final.war.path}</fileName>
					</fileNames>
				</configuration>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                </configuration>
            </plugin>
            <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-scm-plugin</artifactId>
		        <version>1.9.2</version>
		        <configuration>
		          <connectionType>developerConnection</connectionType>
		        </configuration>
      		</plugin>
			
		</plugins>
	</build>
</project>
